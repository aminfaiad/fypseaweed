<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Push Notification Demo</title>
</head>
<body>
    <h1>Push Notifications Demo</h1>
    <button id="subscribeButton">Enable Notifications</button>

    <script>
        const publicKey = 'YOUR_PUBLIC_VAPID_KEY';

        document.getElementById('subscribeButton').addEventListener('click', async () => {
            if ('Notification' in window && 'serviceWorker' in navigator) {
                try {
                    // Request Notification Permission
                    const permission = await Notification.requestPermission();
                    if (permission !== 'granted') {
                        alert('Notification permission is required!');
                        return;
                    }

                    // Register Service Worker
                    const registration = await navigator.serviceWorker.register('/service-worker.js');
                    console.log('Service Worker registered:', registration);

                    // Subscribe to Push Notifications
                    const subscription = await registration.pushManager.subscribe({
                        userVisibleOnly: true,
                        applicationServerKey: urlBase64ToUint8Array(publicKey),
                    });

                    // Send subscription details to the server
                    await fetch('/subscribe.php', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(subscription),
                    });
                    alert('Subscribed to push notifications!');
                } catch (error) {
                    console.error('Subscription failed:', error);
                }
            } else {
                alert('Push notifications are not supported in your browser.');
            }
        });

        // Convert VAPID key to UInt8Array
        function urlBase64ToUint8Array(base64String) {
            const padding = '='.repeat((4 - (base64String.length % 4)) % 4);
            const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');
            const rawData = window.atob(base64);
            return Uint8Array.from([...rawData].map(char => char.charCodeAt(0)));
        }
    </script>
</body>
</html>
